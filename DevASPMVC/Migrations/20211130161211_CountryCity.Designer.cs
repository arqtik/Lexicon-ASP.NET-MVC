// <auto-generated />
using DevASPMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevASPMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211130161211_CountryCity")]
    partial class CountryCity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DevASPMVC.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            CountryID = -1,
                            Name = "Stockholm"
                        },
                        new
                        {
                            ID = -2,
                            CountryID = -1,
                            Name = "Göteborg"
                        });
                });

            modelBuilder.Entity("DevASPMVC.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Name = "Sweden"
                        });
                });

            modelBuilder.Entity("DevASPMVC.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            CityID = -1,
                            Email = "johhug@domain.com",
                            FirstName = "Johannes",
                            Gender = 0,
                            LastName = "Hugosson"
                        },
                        new
                        {
                            ID = -2,
                            CityID = -2,
                            Email = "ingand@domain.com",
                            FirstName = "Ingrid",
                            Gender = 1,
                            LastName = "Andersson"
                        });
                });

            modelBuilder.Entity("DevASPMVC.Models.City", b =>
                {
                    b.HasOne("DevASPMVC.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevASPMVC.Models.Person", b =>
                {
                    b.HasOne("DevASPMVC.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
